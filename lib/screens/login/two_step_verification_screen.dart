import 'dart:async';
import 'package:flutter/material.dart';
import 'package:signup_flow/screens/login/reset_password_screen.dart';
import 'package:signup_flow/utils/navigation_helper.dart';

class TwoStepVerificationScreen extends StatefulWidget {
  const TwoStepVerificationScreen({Key? key}) : super(key: key);

  @override
  State<TwoStepVerificationScreen> createState() => _TwoStepVerificationScreenState();
}

class _TwoStepVerificationScreenState extends State<TwoStepVerificationScreen> {
  final List<TextEditingController> _controllers = List.generate(6, (index) => TextEditingController());
  final List<FocusNode> _focusNodes = List.generate(6, (index) => FocusNode());
  int _resendSeconds = 289;
  Timer? _timer;
  bool _isFormValid = false;

  @override
  void initState() {
    super.initState();
    _startResendTimer();
    for (var controller in _controllers) {
      controller.addListener(_validateForm);
    }
  }

  void _validateForm() {
    setState(() {
      _isFormValid = _controllers.every((controller) => controller.text.isNotEmpty);
    });
  }

  void _startResendTimer() {
    _timer = Timer.periodic(const Duration(seconds: 1), (timer) {
      setState(() {
        if (_resendSeconds > 0) {
          _resendSeconds--;
        } else {
          _timer?.cancel();
        }
      });
    });
  }

  @override
  void dispose() {
    _timer?.cancel();
    for (var controller in _controllers) {
      controller.removeListener(_validateForm);
      controller.dispose();
    }
    for (var focusNode in _focusNodes) {
      focusNode.dispose();
    }
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        backgroundColor: Colors.white,
        elevation: 0,
        leading: IconButton(
          icon: const Icon(Icons.arrow_back, color: Colors.black),
          onPressed: () => Navigator.pop(context),
        ),
        title: const Text(
          'Forgot Password',
          style: TextStyle(
            color: Colors.black,
            fontSize: 20,
            fontWeight: FontWeight.bold,
          ),
        ),
        centerTitle: true,
      ),
      body: SafeArea(
        child: Column(
          children: [
            Padding(
              padding: const EdgeInsets.symmetric(horizontal: 24.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  const SizedBox(height: 24),
                  const Text(
                    'Two Step Verification',
                    style: TextStyle(
                      fontSize: 24,
                      fontWeight: FontWeight.bold,
                    ),
                  ),
                  const SizedBox(height: 16),
                  const Text(
                    'Enter the six digit code generated by your authentication app.',
                    style: TextStyle(
                      fontSize: 16,
                      color: Colors.grey,
                    ),
                    textAlign: TextAlign.center,
                  ),
                  const SizedBox(height: 24),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: List.generate(
                      6,
                      (index) => _buildDigitField(index),
                    ),
                  ),
                  const SizedBox(height: 24),
                  Container(
                    width: double.infinity,
                    height: 56,
                    decoration: BoxDecoration(
                      borderRadius: BorderRadius.circular(28),
                      color: const Color(0xFFFF5252),
                    ),
                    child: ElevatedButton(
                      onPressed: _isFormValid ? () {
                        NavigationHelper.navigateTo(context, const ResetPasswordScreen());
                      } : null,
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Colors.transparent,
                        shadowColor: Colors.transparent,
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(28),
                        ),
                      ),
                      child: const Text(
                        'Confirm',
                        style: TextStyle(
                          fontSize: 18,
                          fontWeight: FontWeight.w500,
                          color: Colors.white,
                        ),
                      ),
                    ),
                  ),
                  const SizedBox(height: 16),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      const Text(
                        "Haven't got the code yet? ",
                        style: TextStyle(
                          color: Colors.grey,
                          fontSize: 14,
                        ),
                      ),
                      GestureDetector(
                        onTap: _resendSeconds == 0 ? () {
                          // Resend code logic would go here
                          setState(() {
                            _resendSeconds = 300;
                            _startResendTimer();
                          });
                          ScaffoldMessenger.of(context).showSnackBar(
                            const SnackBar(content: Text('Code resent!')),
                          );
                        } : null,
                        child: Text(
                          _resendSeconds > 0 
                              ? 'Resend code ${_resendSeconds}s' 
                              : 'Resend code',
                          style: TextStyle(
                            color: _resendSeconds > 0 ? Colors.grey : Colors.blue,
                            fontSize: 14,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
            const Spacer(),
            // Custom numeric keyboard
            Container(
              color: Colors.grey.shade100,
              child: Column(
                children: [
                  Row(
                    children: [
                      _buildKeyboardButton('1'),
                      _buildKeyboardButton('2', subText: 'ABC'),
                      _buildKeyboardButton('3', subText: 'DEF'),
                    ],
                  ),
                  Row(
                    children: [
                      _buildKeyboardButton('4', subText: 'GHI'),
                      _buildKeyboardButton('5', subText: 'JKL'),
                      _buildKeyboardButton('6', subText: 'MNO'),
                    ],
                  ),
                  Row(
                    children: [
                      _buildKeyboardButton('7', subText: 'PQRS'),
                      _buildKeyboardButton('8', subText: 'TUV'),
                      _buildKeyboardButton('9', subText: 'WXYZ'),
                    ],
                  ),
                  Row(
                    children: [
                      _buildKeyboardButton('+*#'),
                      _buildKeyboardButton('0'),
                      _buildKeyboardButton('âŒ«', isBackspace: true),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildDigitField(int index) {
    return Container(
      width: 45,
      height: 55,
      decoration: BoxDecoration(
        border: Border.all(color: Colors.grey.shade300),
        borderRadius: BorderRadius.circular(8),
        color: Colors.white,
      ),
      child: Center(
        child: Text(
          _controllers[index].text,
          style: const TextStyle(
            fontSize: 24,
            fontWeight: FontWeight.bold,
          ),
        ),
      ),
    );
  }

  Widget _buildKeyboardButton(String text, {String? subText, bool isBackspace = false}) {
    return Expanded(
      child: InkWell(
        onTap: () {
          if (isBackspace) {
            // Find the last non-empty field and clear it
            for (int i = _controllers.length - 1; i >= 0; i--) {
              if (_controllers[i].text.isNotEmpty) {
                _controllers[i].clear();
                if (i > 0) {
                  _focusNodes[i - 1].requestFocus();
                }
                break;
              }
            }
          } else if (text.length == 1) {
            // Find the first empty field and fill it
            for (int i = 0; i < _controllers.length; i++) {
              if (_controllers[i].text.isEmpty) {
                _controllers[i].text = text;
                if (i < _controllers.length - 1) {
                  _focusNodes[i + 1].requestFocus();
                }
                break;
              }
            }
          }
        },
        child: Container(
          height: 60,
          decoration: BoxDecoration(
            color: Colors.white,
            border: Border.all(color: Colors.grey.shade200, width: 0.5),
          ),
          child: isBackspace 
              ? const Center(child: Icon(Icons.backspace_outlined))
              : Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Text(
                      text,
                      style: const TextStyle(
                        fontSize: 24,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    if (subText != null)
                      Text(
                        subText,
                        style: TextStyle(
                          fontSize: 10,
                          color: Colors.grey.shade600,
                        ),
                      ),
                  ],
                ),
        ),
      ),
    );
  }
}

